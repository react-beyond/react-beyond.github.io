"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[192],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),i=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=i(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return r?a.createElement(f,o(o({ref:t},c),{},{components:r})):a.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:n,o[1]=p;for(var i=2;i<l;i++)o[i]=r[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5163:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var a=r(7462),n=(r(7294),r(3905));const l={sidebar_position:3,description:'Transforms all "_tw" prop on elements to "className" with clsx() applied.'},o="deepTwProp",p={unversionedId:"gallery/tw-prop",id:"gallery/tw-prop",title:"deepTwProp",description:'Transforms all "_tw" prop on elements to "className" with clsx() applied.',source:"@site/docs/gallery/tw-prop.mdx",sourceDirName:"gallery",slug:"/gallery/tw-prop",permalink:"/docs/gallery/tw-prop",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gallery/tw-prop.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:'Transforms all "_tw" prop on elements to "className" with clsx() applied.'},sidebar:"theSidebar",previous:{title:"deepTryCatch",permalink:"/docs/gallery/try-catch"},next:{title:"error-fallback",permalink:"/docs/gallery/error-fallback"}},s={},i=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Examples",id:"examples",level:2}],c={toc:i},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"deeptwprop"},"deepTwProp"),(0,n.kt)("p",null,"Transforms all ",(0,n.kt)("inlineCode",{parentName:"p"},"_tw"),' prop on elements to "className" with clsx() applied. If a ',(0,n.kt)("inlineCode",{parentName:"p"},"className")," prop is already present, it will be merged."),(0,n.kt)("p",null,"In its runtime logic, this HOC doesn't differ from ",(0,n.kt)("a",{parentName:"p",href:"/docs/gallery/clsx-prop"},"deepClsxProp")," at all, it has the exact same source code (except the prop name and the HOC id). It might still be useful for separating the tailwind utility classes from the others. In a later development, we may try to add ",(0,n.kt)("a",{parentName:"p",href:"https://twitter.com/markdalgleish/status/1329639099498577921"},"TypeScript check")," to the ",(0,n.kt)("inlineCode",{parentName:"p"},"_tw")," prop to make sure it's only used for tailwind."),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install react-deephoc @react-deephoc/twprop\n")),(0,n.kt)("p",null,"In your VSCode settings, add this config:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'  "tailwindCSS.experimental.classRegex": [\n    "_tw=\\"([^\\"]*)"\n  ],\n')),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"deepTwProp(opts: {\n  id?: string\n} = {}): HOC\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"id")," - The id of the HOC. Defaults to ",(0,n.kt)("inlineCode",{parentName:"li"},'"twProp"'),".")),(0,n.kt)("p",null,"(Check out the ",(0,n.kt)("a",{parentName:"p",href:"/docs/guide/usage-patterns"},"Usage Patterns")," page to see alternative syntaxes.)"),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'import { DeepHocs } from "react-deephoc"\nimport { deepClsxProp } from "@react-deephoc/twprop"\n\nconst el = (\n  <DeepHocs hocs={[deepTwProp()]}>\n    <App />\n  </DeepHocs>\n)\n')),(0,n.kt)("p",null,"Elements like this under ",(0,n.kt)("inlineCode",{parentName:"p"},"<App />"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},"<div class=\"some-class\" _tw={['mx-6', true && 'bg-red-400']} />\n")),(0,n.kt)("p",null,"will turn into this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'<div className="some-class mx-6 bg-red-400" />\n')))}u.isMDXComponent=!0}}]);