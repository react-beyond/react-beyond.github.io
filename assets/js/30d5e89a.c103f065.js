"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[953],{9009:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(5893),i=r(3905);const o={sidebar_position:4},s="TypeScript",c={unversionedId:"guide/typescript",id:"guide/typescript",title:"TypeScript",description:"Those Beyond Features which add directives, override the React type declarations to add the directive typing to the elements. For example:",source:"@site/docs/guide/typescript.mdx",sourceDirName:"guide",slug:"/guide/typescript",permalink:"/docs/guide/typescript",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guide/typescript.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"theSidebar",previous:{title:"Scopes",permalink:"/docs/guide/scopes"},next:{title:"Usage Patterns",permalink:"/docs/guide/usage-patterns"}},a={},p=[{value:"ESLint",id:"eslint",level:2}];function d(e){const t=Object.assign({h1:"h1",p:"p",pre:"pre",code:"code",h2:"h2"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"typescript",children:"TypeScript"}),"\n",(0,n.jsx)(t.p,{children:"Those Beyond Features which add directives, override the React type declarations to add the directive typing to the elements. For example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",metastring:'title="deepIfProp.ts"',children:"declare module 'react' {\n  interface Attributes {\n    x-if?: boolean\n  }\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"This ensures that TypeScript doesn't complain about the directive prop, and that you can Cmd/Ctrl + Click on the prop to go to the declaration."}),"\n",(0,n.jsx)(t.p,{children:"But keep in mind, that this is a global override. Even though the runtime mechanics of Beyond Features is strictly scoped down to the component's subtree, TypeScript type declarations remain global."}),"\n",(0,n.jsx)(t.h2,{id:"eslint",children:"ESLint"}),"\n",(0,n.jsxs)(t.p,{children:["If you're using ESLint, there might be one more annoyance with the directives if the ",(0,n.jsx)(t.code,{children:"react/no-unknown-property"})," rule is enabled (it is, by default). To get rid of this issue, you have to disable the rule:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",metastring:'title=".eslintrc.yml"',children:"rules:\n  react/no-unknown-property: off\n"})})]})}const l=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}},3905:(e,t,r)=>{r.d(t,{ah:()=>p});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=n.createContext({}),p=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),h=i,y=u["".concat(a,".").concat(h)]||u[h]||d[h]||o;return r?n.createElement(y,s(s({ref:t},l),{},{components:r})):n.createElement(y,s({ref:t},l))}));l.displayName="MDXCreateElement"}}]);